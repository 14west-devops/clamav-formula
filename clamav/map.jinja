# -*- coding: utf-8 -*-
# vim: ft=jinja

{# deep_merge macro #}
{%- macro deep_merge(a, b) %}
{%-     for k,v in b.items() %}
{%-         if v is string or v is number %}
{%-             do a.update({ k: v }) %}
{%-         elif v is not mapping %}
{%-             if a[k] is not defined %}
{%-                 do a.update({ k: v }) %}
{%-             elif a[k] is iterable and a[k] is not mapping and a[k] is not string %}
{%-                 do a.update({ k: v|list + a[k]|list}) %}
{%-             else %}
{%-                 do a.update({ k: v }) %}
{%-             endif %}
{%-         elif v is mapping %}
{%-             if a[k] is not defined %}
{%-                 do a.update({ k: v }) %}
{%-             elif a[k] is not mapping %}
{%-                 do a.update({ k: v }) %}
{%-             else %}
{%-                 do deep_merge(a[k], v) %}
{%-             endif %}
{%-         else %}
{%-            do a.update({ k: 'ERROR: case not contempled in merging!' }) %}
{%-         endif %}
{%-     endfor %}
{%- endmacro %}

{## Start with  defaults from defaults.sls ##}
{% import_yaml 'clamav/defaults.yaml' as default_settings %}

{##
Setup variable using grains['os_family'] based logic, only add key:values here
that differ from whats in defaults.yaml
##}

{% set os_family_map = salt['grains.filter_by']({
        'Debian': {
          'clamd': {
            'pkgs': [ 'clamav', 'clamav-daemon'],
            'service_name': 'clamav-daemon'
          },
          'freshclam': {
            'pkgs': ['clamav-freshclam'],
            'service_name': 'clamav-freshclam'
           },
        },
        'Suse': {},
        'Arch': {
          'clamd': {
            'pkgs': [ 'clamav' ],
            'service_name': 'clamd',
          },
          'freshclam': {
            'pkgs': ['clamav'],
            'service_name': 'freshclamd',
          },
        },
        'RedHat': {
          'clamd': {
            'service_name': 'clamd@scan'
          },
          'freshclam': {
            'service_name': '',
          },
        },
  }
  , grain="os_family"
  , merge=salt['pillar.get']('clamav:lookup'))
%}
{## Merge the flavor_map to the default settings ##}
{% do deep_merge(default_settings.clamav,os_family_map) %}

{## Merge in clamav:lookup pillar ##}
{% set clamav = salt['pillar.get'](
        'clamav',
        default=default_settings.clamav,
        merge=True
    )
%}
